# -*- coding: utf-8 -*-
"""Gesture_Controll.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pcPTN5AIZ3EmwGUjMAdLlnP5PFT8r8uz
"""

import cv2
from cvzone.HandTrackingModule import HandDetector
import mouse
import threading
import numpy as np
import time

#!pip install cvzone
#!pip install mediapipe
#!pip install mouse

frameR = 100
cam_w, cam_h = 640,480
cap = cv2.VideoCapture(0)
cap.set(3,cam_w)
cap.set(4,cam_h)
detector = HandDetector(detectionCon = 0.9, maxHands=1)

l_delay = 0
r_delay = 0
double_delay = 0

def l_clk_delay():
    global l_delay
    global l_clk_thread
    time.sleep(1)
    l_delay = 0
    l_clk_thread = threading.Thread(target=l_clk_delay)

    def r_clk_delay():
      global l_delay
      global r_clk_thread
      time.sleep(1)
      l_delay = 0
      l_clk_thread = threading.Thread(target=l_clk_delay)

    def double_clk_delay():
      global double_delay
      global double_clk_thread
      time.sleep(2)
      double_delay = 0
      double_clk_thread = threading.Thread(target = double_clk_delay)

    while True:
      success, img = cap.read()
      img = cv2.flip(img,1)
      hands, img = detector.findHands(img, flipType= false)
      cv2.rectangle(img, (frameR, frameR), (cam_w - frameR, cam_h - frameR),(255, 0, 255),2)
      if hands:
        lmList = hands[0]['lmList']
        ind_x, ind_y = lmList[8][0], lmList[8][1]
        mid_x, mid_y = lmList[12][0], lmList[12][1]
        cv2.circle(img, (ind_x, ind_y), 5 , (0,255,255), 2)
        cv2.circle(img, (mid_x, mid_y), 5 , (0,255,255),2)
        fingers = detector.fingersUp(hands[0])

        # Mouse Movement
      if fingers[1] == 1 and fingers[2] == 0 and fingers[0] ==1:
        conv_x = int(np.interp(ind_x, (frameR, cam_w - frameR), (0, 1536)))
        conv_y = int(np.interp(ind_y, (frameR, cam_w - frameR), (0, 864)))
        mouse.move(conv_x, conv_y)
        print(conv_x, conv_y)

      # button clicks
      if fingers[1] == 1 and fingers[2] == 1 and fingers[0] == 1:
        if abs(ind_x = mid_x) < 25 :
          mouse.click(button='left')
          l_delay = 1
          l_clk_thread.start()
      # rigth click
      if fingers[1] == 1 and fingers[2] == 1 and fingers[0] == 0 and fingers[4] == 0:
        if abs(ind_x = mid_x) < 25 :
          mouse.click(button='right')
          r_delay = 1
          r_clk_thread.start()

     # mouse scrolling
      if fingers[1] == 1 and fingers[2] ==1 and fingers[0] == 0 and fingers[4] == 1:
        if abs(ind_x = mid_x) < 25:
          mouse.wheel(delta = -1)
      if fingers[1] == 1 and fingers[2] ==1 and fingers[0] == 0 and fingers[4] == 1:
        if abs (ind_x = mid_x)<25:
          mouse.wheel(delta = 1)


     #mouse double click
      if fingers[1] == 1 and fingers[2] ==0 and fingers[0] == 0 and finger[4] == 0 and double_delay == 0:
        double_delay = 1
        mouse.double_click(button="left")
        double_click_thread.start()

      cv2.imshow("camera feed", img )
      cv2.waitKey(1)